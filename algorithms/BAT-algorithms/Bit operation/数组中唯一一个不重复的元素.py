"""
一、题目
    给定的任意数组只有一个数字只出现了一次，其他数字出现了偶数次，
    求这个只出现一次的数？

二、思路
    * 暴力求解
        使用hash统计每个数字出现的次数。时间复杂度O(N),空间复杂度是O(N)
    * 位运算快速就求解
        利用异或运算的性质可以快速求解，见知识点介绍
        “利用 x ^ x = 0  和 x ^ 0 = x 的特点，可以将三个数中重复的两个数去除，只留下另一个数”
三、例子
    2 2 3 3 4
    2^2=0
        0^3=3
            3^3=0
                0^4=4
    连续异或操作后即可得到只出现一次的数字
"""


def single_number(nums):
    ret = 0
    for n in nums:
        ret = ret ^ n  # 异或运算
    return ret


if __name__ == '__main__':
    nums = [1, 2, 1, 3, 2, 3, 5, 4, 4, 4, 4]
    print(single_number(nums))
